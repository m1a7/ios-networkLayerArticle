#import "UserProfileVM.h"
// APIManager
#import "APIManager.h"
#import "Token.h"

// Other ViewModels
#import "UserProfileCellVM.h"
#import "UserProfileGalleryCellVM.h"
#import "WallPostCellVM.h"

// Models
#import "UserProfile.h"

// Foundation
#import "NSDate+Expire.h"
#import "NSObject+AdditionalProperties.h"


/*--------------------------------------------------------------------------------------------------------------
 (üóÉ‚öñÔ∏èüì±) 'UserProfileVM' - viewModel —Ç–∞–±–ª–∏—á–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ 'UserProfileTVC'.
 --------------------------------------------------------------------------------------------------------------*/

@interface UserProfileVM ()
// –°—Å—ã–ª–∫–∞ –Ω–∞ viewModel —è—á–µ–π–∫–∏ –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π collectionView —Å —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@property (nonatomic, strong, readwrite) UserProfileGalleryCellVM* photoGalleryVM;
// Models
@property (nonatomic, strong) UserProfile* userProfileModel;
@end



@implementation UserProfileVM

#pragma mark - NetworkOperations

/*--------------------------------------------------------------------------------------------------------------
 –ü–æ–ª—É—á–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ 'self.userID' –∏–ª–∏ –ø–æ 'APIManager.token.userID'.
 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç viewModel —è—á–µ–π–∫–∏ —Å –ø–æ–º–æ—â—å—é –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏, –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–µ –≤ 'cellsViewModel'.
--------------------------------------------------------------------------------------------------------------*/
- (DTO*) userInfoOpRunItself:(BOOL)runOpItself
                     onQueue:(nullable NSOperationQueue*)queue
                  completion:(nullable void(^)(NSError* _Nullable error, UserProfileCellVM* _Nullable cellVM))completion
{
    printMethod;
    if (![self.userInfoNetOp isWorkingOrInProcess])
    {
        __weak UserProfileVM* weak = self;      
        NSArray<NSString*>* userIDs = (self.userID) ? @[self.userID] : @[];
        
        // Network operation initialization
        self.userInfoNetOp =
        [APIManager usersGet:userIDs
                      fields:nil
                  completion:^(NSArray<UserProfile*>* _Nullable userProfiles, BO* _Nonnull op) {
                    
                      // Update property refrence on fresh operation
                      weak.userInfoNetOp = (DTO*)op;
                     
                      // Handle error
                      if ([APIManager callCompletionWithTwoArg:completion ifOccuredErrorInOperation:op]){
                          return;
                      }
                      
                      // Prepare data for completion block.
                      UserProfileCellVM* cellViewModel = nil;
                      if (userProfiles.count > 0){
                          cellViewModel = [UserProfileCellVM initWithModel:[userProfiles firstObject]];
                          weak.userProfileModel = [userProfiles firstObject];
                      }
                      if (cellViewModel){
                          [weak.cellsViewModel addObject:cellViewModel];
                      }
                      
                      
                      // Call completion
                      if (completion) completion(nil,cellViewModel);
                      
        }];
        //Set value in order to if you exit from current screen, the operation will be canceled
        self.userInfoNetOp.owner = self.addressInMemory;

        // Decides whether to start the process of performing the operation at the moment or not.
        if (runOpItself){
            [self.userInfoNetOp start];
        }else if ((!runOpItself) && (queue)){
            [queue addOperation:self.userInfoNetOp];
        }
    }
    return self.userInfoNetOp;
}


/*--------------------------------------------------------------------------------------------------------------
 –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ 'self.userID' –∏–ª–∏ –ø–æ 'APIManager.token.userID'.
 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç viewModel —è—á–µ–π–∫–∏ —Å –ø–æ–º–æ—â—å—é –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏, –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–µ –≤ 'cellsViewModel'.
 -------
 (‚ö†Ô∏è) –í —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –∏–º–µ–µ—Ç—Å—è –æ—Å–æ–±–æ–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ:
  –î–∞–Ω–Ω–∞—è –≤—å—é–ú–æ–¥–µ–ª—å ('UserProfileVM') —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –µ—â–µ –æ–¥–Ω—É –≤—å—é–ú–æ–¥–µ–ª—å ('UserProfileGalleryCellVM'), –∫–æ—Ç–æ—Ä–∞—è –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç
  –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π 'UICollectionView' —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
  –ü–æ —Ñ–∞–∫—Ç—É –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ –ø—Ä–æ–ø–µ—Ä—Ç–∏ –Ω–∞ —Å–µ—Ç–µ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ—á–µ—Ä–Ω—è—è –≤—å—é–ú–æ–¥–µ–ª—å.
  –¢–∞–∫ —á—Ç–æ –µ—Å–ª–∏ –Ω–∞–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–º–µ–Ω–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω—É–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –¥–æ—á–µ—Ä–Ω—é—é –≤—å—é–ú–æ–¥–µ–ª—å.
 --------------------------------------------------------------------------------------------------------------*/
- (DTO*) photosOpRunItself:(BOOL)runOpItself
                   onQueue:(nullable NSOperationQueue*)queue
                completion:(nullable void(^)(NSError* _Nullable error))completion
{   printMethod;
    // –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–ø–µ—Ä—Ç–∏ –Ω–∞ –Ω–µ–µ.
    if ([self.userPhotoNetOp isWorkingOrInProcess]){
        return self.userPhotoNetOp;
    }
    else if (([self.userPhotoNetOp isFinishedOrCancelled]) || (!self.userPhotoNetOp)){
            
        __weak UserProfileVM* weak = self;

        // Create a child viewModel, which has implemented network-part in itself
        UserProfileGalleryCellVM* photoGalleryCellViewModel = [UserProfileGalleryCellVM initWithUserID:self.userID offset:0 count:20];
        
        // Network operation initialization
        self.userPhotoNetOp =
        [photoGalleryCellViewModel photosOpRunItself:runOpItself onQueue:queue completion:^(NSError* error, NSArray<UserProfilePhotoCellVM*>* cellsVM, NSArray<NSIndexPath*>* indexPaths) {
            if (error){
                if (completion) completion(error);
                return;
            }
            // Add cell's viewModel to array
            [weak.cellsViewModel addObject:photoGalleryCellViewModel];
            if (completion) completion(error);
        }];
        //Set value in order to if you exit from current screen, the operation will be canceled
        self.userPhotoNetOp.owner = self.addressInMemory;
    }
    return self.userPhotoNetOp;
}


/*--------------------------------------------------------------------------------------------------------------
 –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–ø–∏—Å–∏ —Å–æ —Å—Ç–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ 'self.userID' –∏–ª–∏ –ø–æ 'APIManager.token.userID'.
 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç viewModel —è—á–µ–π–∫–∏ —Å –ø–æ–º–æ—â—å—é –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏, –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–µ –≤ 'cellsViewModel'.
--------------------------------------------------------------------------------------------------------------*/
- (DTO*) wallOpRunItself:(BOOL)runOpItself
                 onQueue:(nullable NSOperationQueue*)queue
              completion:(nullable void(^)(NSError* _Nullable error,
                                           NSArray<WallPostCellVM*>* _Nullable viewModels,
                                           NSArray<NSIndexPath*>*    _Nullable indexPaths))completion
{   printMethod;
    // –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–ø–µ—Ä—Ç–∏ –Ω–∞ –Ω–µ–µ.
    if ([self.userWallNetOp isWorkingOrInProcess]){
        return self.userWallNetOp;
    } else
    if (([self.userWallNetOp isFinishedOrCancelled]) || (!self.userWallNetOp)){
        
        __weak UserProfileVM* weak = self;
        
        // Network operation initialization
        self.userWallNetOp =
        [APIManager wallGet:self.userID
                     offset:(self.wallPostsCellViewModel.count > 1) ? self.wallPostsCellViewModel.count : 0
                      count:20
                     filter:nil
                 completion:^(NSArray<WallPost*>* wallPosts, BO* op) {
            
                     // Update property refrence on fresh operation
                     weak.userWallNetOp = (DTO*)op;
                   
                     // Handle error
                     if ([APIManager callCompletionWithThreeArg:completion ifOccuredErrorInOperation:op]){
                         return;
                     }
                    
                     // Prepare data for completion block
                     // 1. create VM for cels
                     // 2. Insert vm to self.cellViewModels
                     // 3. Call completion -> [reloadData]
                     
                    NSMutableArray<NSIndexPath*>*    _Nullable indexPaths = @[].mutableCopy;
                    NSMutableArray<WallPostCellVM*>* _Nullable viewModels = @[].mutableCopy;

                    for (WallPost* wallPost in wallPosts) {
                          WallPostCellVM* cellViewModel = [WallPostCellVM initWithModel:wallPost];
                          [weak.cellsViewModel         addObject:cellViewModel]; // –≠—Ç–æ –æ–±—â–∏–π –º–∞—Å—Å–∏–≤ –ø–æ–¥ –≤—Å–µ —è—á–µ–π–∫–∏
                          [weak.wallPostsCellViewModel addObject:cellViewModel]; // –¢—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è viewModels —Ç–æ–ª—å–∫–æ –¥–ª—è WallPostCell
                                                                                 // –°–¥–µ–ª–∞–Ω–æ —ç—Ç–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞, —á—Ç–æ–±—ã offset –Ω–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å.
                          [viewModels addObject:cellViewModel];
                          [indexPaths addObject:[NSIndexPath indexPathForRow:1//[weak.cellsViewModel indexOfObject:cellViewModel]
                                                                    inSection:[weak.cellsViewModel indexOfObject:cellViewModel]]];
                     }
                     op.result = wallPosts;
                     
                     // Call completion
                     if (completion) completion(nil, viewModels,indexPaths);
       }];
        //Set value in order to if you exit from current screen, the operation will be canceled
        self.userWallNetOp.owner = self.addressInMemory;
        
        // Decides whether to start the process of performing the operation at the moment or not.
        if ((runOpItself) && (self.userWallNetOp.state == RXNO_ReadyToStart)){
            [self.userWallNetOp start];
        }else if ((!runOpItself) && (queue) && (self.userWallNetOp.state == RXNO_ReadyToStart)){
            [queue addOperation:self.userWallNetOp];
        }
    }
    return self.userWallNetOp;
}

/*--------------------------------------------------------------------------------------------------------------
 –í—ã–∑—ã–≤–∞–µ—Ç —Å–µ—Ç–µ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –ø–æ—Å—ã–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –æ —Ä–∞–∑–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ. –û—Ç—á–∏—â–∞–µ—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞ –¥–∏—Å–∫–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.
 --------------------------------------------------------------------------------------------------------------*/
- (DTO*) logoutOpRunItself:(BOOL)runOpItself
                   onQueue:(nullable NSOperationQueue*)queue
                completion:(nullable void(^)(void))completion
{
    self.logoutNetOp = [APIManager logout:^{
                          if (completion) completion();
                       }];
    // Decides whether to start the process of performing the operation at the moment or not.
    if ((runOpItself) && (self.logoutNetOp.state == RXNO_ReadyToStart)){
        [self.logoutNetOp start];
    }else if ((!runOpItself) && (queue) && (self.logoutNetOp.state == RXNO_ReadyToStart)){
        [queue addOperation:self.logoutNetOp];
    }
    return self.logoutNetOp;
}


/*--------------------------------------------------------------------------------------------------------------
 –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ç—Ä–∏ —Å–µ—Ç–µ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–∏ (userInfoNetOp,userPhotoNetOp,userWallNetOp).
 –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞ –ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –ø—Ä–æ–ø–µ—Ä—Ç–∏, –∞ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –æ–±–µ—Ä—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Ä—É—Ç –Ω–∞ —Å–µ–±—è
 –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç 'APIManager' –¥–∞–Ω–Ω—ã–µ.
 --------------------------------------------------------------------------------------------------------------*/
- (GO*) performNeededOperations:(void(^)(NSError* _Nullable error))completion
{
    printMethod;
    __weak UserProfileVM* weak = self;
    // Group operation initialization
    self.loadAllNeededConentOp = [GO groupOperation:^(GO * _Nonnull groupOp){
        
        // (!) –ï—Å–ª–∏ –º—ã –Ω–µ –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–µ—Ç–µ–≤—ã–º –æ–ø–µ—Ä–∞—Ü–∏—è–º —á–µ—Ä–µ–∑ 'weak', –∞ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –∏—Ö —Ç—É—Ç
        //     –¢–æ —Ç–∞–∫ –æ–Ω–∏ —É–¥–∞–ª—è—é—Ç—Å—è –∏–∑ –ø–∞–º—è—Ç–∏ –±—ã—Å—Ç—Ä–µ–µ, –Ω–µ–∂–µ–ª–µ —á–µ–º –∫–æ–≥–¥–∞ –º—ã –æ–±—Ä–∞—â–∞–µ–º—Å—è –∏–∑ –±–ª–æ–∫–∞ –∫ –ø—Ä–æ–ø–µ—Ä—Ç–∏
        
        // UserInfoOp
        [weak userInfoOpRunItself:NO onQueue:nil completion:nil];
        // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç–º–µ–Ω—ã —Å–µ—Ç–µ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–Ω–∞ –≥—Ä—É–ø–ø–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
        weak.userInfoNetOp.downloadProgress = ^(DTO * _Nonnull op, DTODownProgress p) {
            if (groupOp.state == RXNO_Cancelled) { [op cancel]; }
        };
        [weak.userInfoNetOp syncStart];
        
        if (groupOp.state == RXNO_Cancelled) return;
        if ([APIManager callCompletion:completion ifOccuredErrorInOperation:weak.userInfoNetOp]){
            return;
        }
        
        // PhotoGalleryOp
        [weak photosOpRunItself:NO onQueue:nil completion:nil];
        weak.userPhotoNetOp.downloadProgress = ^(DTO * _Nonnull op, DTODownProgress p) {
            if (groupOp.state == RXNO_Cancelled) [op cancel];
        };
        [weak.userPhotoNetOp syncStart];
        
        if (groupOp.state == RXNO_Cancelled) return;
        if ([APIManager callCompletion:completion ifOccuredErrorInOperation:weak.userPhotoNetOp]){
            return;
        }

        // WallNetOp
        [weak wallOpRunItself:NO onQueue:nil completion:nil];
        weak.userWallNetOp.downloadProgress = ^(DTO * _Nonnull op, DTODownProgress p) {
            if (groupOp.state == RXNO_Cancelled) [op cancel];
        };
        [weak.userWallNetOp syncStart];

        if (groupOp.state == RXNO_Cancelled) return;
        if (completion) completion(weak.userWallNetOp.error);
    }];
    
    self.loadAllNeededConentOp.owner = self.addressInMemory;
    // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    [APIManager.syncQueue addOperation:self.loadAllNeededConentOp];
    return self.loadAllNeededConentOp;
}

#pragma mark - Management of network operations
/*--------------------------------------------------------------------------------------------------------------
 –û—Ç–º–µ–Ω—è–µ—Ç –≤—Å–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥–∏
 --------------------------------------------------------------------------------------------------------------*/
- (void) cancelAllNetworkOperations
{
    printMethod;
    // –í–æ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ 'owner', —á—Ç–æ–±—ã –≤ –±—É–¥—É—â–µ–º, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç
    // —Å–∏—Ç—É–∞—Ü–∏—è –∫–æ–≥–¥–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω–µ—Ç —ç–∫—Ä–∞–Ω, –∞ –æ–ø–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤
    // –æ—á–µ—Ä–µ–¥–∏, –º—ã –º–æ–≥–ª–∏ –µ–µ –æ—Ç–º–µ–Ω–∏—Ç—å.
    
    // –§—Ä–∞–µ–º–≤–æ—Ä–∫ RXNO –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä –¥–≤–∞ –º–µ—Ç–æ–¥–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞.
    // 1) cancelAllNetworkOperationsByEqual –Ω—É–∂–µ–Ω –∫–æ–≥–¥–∞ –º—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ 'owner' –ø–µ—Ä–µ–¥–∞–µ–º –∏–º–µ–Ω–Ω–æ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–∫–æ–π-—Ç–æ –æ–±—ä–µ–∫—Ç.
    //    –ò –ø–æ –Ω–µ–º—É —Ö–æ—Ç–∏–º –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –∏–ª–∏ –Ω–µ—Ç.
    
    // 2) cancelAllNetworkOperationsByEqualToString –Ω—É–∂–µ–Ω –∫–æ–≥–¥–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ 'owner' –º—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º–µ–Ω–Ω–æ –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤,
    //    —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ –µ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø—Ä–æ–ø–µ—Ä—Ç–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –æ–±—ä–µ–∫—Ç —Å –æ–¥–Ω–∏–º
    //    –∞–¥—Ä–µ—Å–æ–º, –∞ –≤ –º–µ—Ç–æ–¥ –æ—Ç–º–µ–Ω—ã —É–∂–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Å –¥—Ä—É–≥–∏–º –∞–¥—Ä–µ—Å–æ–º, –Ω–æ –ø–æ —Ñ–∞–∫—Ç—É –∏ –ø–µ—Ä–≤—ã–π –∏ –≤—Ç–æ—Ä–æ–π —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ
    //    –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤.
    
    // –û—Ç–º–µ–Ω—è–µ–º —Ä–∞–±–æ—Ç—É —Å—Ä–∞–∑—É –Ω–∞ –¥–≤—É—Ö –æ—á–µ—Ä–µ–¥—è—Ö
    [BO cancelAllNetworkOperationsByEqualToString:self.addressInMemory inQueue:APIManager.aSyncQueue];
    [BO cancelAllNetworkOperationsByEqualToString:self.addressInMemory inQueue:APIManager.syncQueue];
}



#pragma mark - Initialization

/*--------------------------------------------------------------------------------------------------------------
 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç viewModel —Å 'userID'. (–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –±—É–¥—É—â–µ–º)
 --------------------------------------------------------------------------------------------------------------*/
+ (UserProfileVM*) initWithUserID:(nullable NSString*)userID
{
    UserProfileVM* viewModel = [[UserProfileVM alloc] init];
    if (viewModel){
        viewModel.userID = userID;
    }
    return viewModel;
}

#pragma mark - Life Cycle

- (void)dealloc
{
    printMethod;
    [self cancelAllNetworkOperations];
}


#pragma mark - Getters/Setters

/*--------------------------------------------------------------------------------------------------------------
  –•—Ä–∞–Ω–∏—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ –≤—å—é–ú–æ–¥–µ–ª–∏ —è—á–µ–µ–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ.
 --------------------------------------------------------------------------------------------------------------*/
- (NSMutableArray<id> *)cellsViewModel
{
    if (!_cellsViewModel){
         _cellsViewModel = [NSMutableArray new];
    }
    return _cellsViewModel;
}

/*--------------------------------------------------------------------------------------------------------------
  –•—Ä–∞–Ω–∏—Ç —Ç–æ–ª—å–∫–æ –≤—å—é–ú–æ–¥–µ–ª–∏ –∫–ª–∞—Å—Å–∞ 'WallPostCellVM'
 --------------------------------------------------------------------------------------------------------------*/
- (NSMutableArray<WallPostCellVM *> *)wallPostsCellViewModel
{
    if (!_wallPostsCellViewModel){
         _wallPostsCellViewModel = [NSMutableArray new];
    }
    return _wallPostsCellViewModel;
}

/*--------------------------------------------------------------------------------------------------------------
  –•—Ä–∞–Ω–∏—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 --------------------------------------------------------------------------------------------------------------*/
- (NSString *)userID
{
    if (!_userID){
         _userID = APIManager.token.userID;
    }
    return _userID;
}

/*--------------------------------------------------------------------------------------------------------------
 –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 --------------------------------------------------------------------------------------------------------------*/
- (NSString *)userFirstName
{
    return self.userProfileModel.firstName;
}

@end
