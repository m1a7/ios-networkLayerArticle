//
//  Templater.m
//  vk-networkLayer
//
//  Created by Admin on 06/08/2020.
//  Copyright ¬© 2020 iOS-Team. All rights reserved.
//

#import "Templater.h"
// APIManager's Categories
#import "APIManager+Utilites.h"

// Own Categories
#import "TemplaterFileManager.h"

// Thrid-party frameworks
#import <RXZipArchive/RXZipArchive.h>

// –ö–ª—é—á–∏ –¥–ª—è NSUserDefualt
static NSString *const templateDirectoryUserDefaultKey   = @"templateDirectoryUserDefaultKey";
static NSString *const wasArchiveExtractedUserDefaultKey = @"wasArchiveExtractedUserDefaultKey";


/*--------------------------------------------------------------------------------------------------------------
 üñ®üßæ 'Templater' - –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–∑—Ü—ã –æ—Ç–≤–µ—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .json —Å –¥–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.
 ---------------
 –ì–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —ç–∫–∑–µ–º–ø–ª—è—Ä—ã NSDictionary –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é json —Ñ–∞–π–ª–æ–≤
 —Ö—Ä–∞–Ω—è—â–∏—Ö—Å—è –Ω–∞ –¥–∏—Å–∫–µ.
 ---------------
 [‚öñÔ∏è] Duties:
 - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∫–ª–∞—Å—Å–æ–º 'TemplaterFileManager' –∫–æ—Ç–æ—Ä—ã–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Å–æ—á–Ω–∏—Ü–µ–π.
 - –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å/–ß–∏—Ç–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ NSUserDefault.
 - –û—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏ (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Ç–µ–π –¥–ª—è –ø–∞–ø–æ–∫ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ).
 ---------------
 The class provides the following features:
 - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞—Ä–∏ –∏–∑ json —Ñ–∞–π–ª–æ–≤ –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 - –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å —à–∞–±–ª–æ–Ω—ã –≤ –ø–µ—Å–æ—á–Ω–∏—Ü—É –ø–æ –∏–º–µ–Ω–∏ API –º–µ—Ç–æ–¥–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—ã–ª —Å–æ–≤–µ—Ä—à–µ–Ω –∑–∞–ø—Ä–æ—Å.
 - –£–¥–∞–ª—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω, –ø–æ –∏–º–µ–Ω–∏ API –º–µ—Ç–æ–¥–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—ã–ª —Å–æ–≤–µ—Ä—à–µ–Ω –∑–∞–ø—Ä–æ—Å.
 - –£–¥–∞–ª—è—Ç—å –≤—Å–µ —à–∞–±–ª–æ–Ω—ã —Å –¥–∏—Å–∫–∞.
 - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–µ–∑–æ–ø–∞—Å—Ç–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –ø–∞–ø–∫—É —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –≤ –¥—Ä—É–≥–∏–µ –ª–æ–∞–∫—Ü–∏–∏.
 ---------------
 Additionally:
 (‚ö†Ô∏è) –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–ª–∞—Å—Å–∞ –±—ã–ª–∞ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –≤–æ –≤—Ä–µ–º—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –º–æ–∂–Ω–æ –±—ã–ª–æ
      –¥–∏–Ω–º–∞—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –∏ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã.
 –¢–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–µ–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø–µ—Å–æ—á–Ω–∏—Ü–µ–π, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ bundle –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ñ–∞–π–ª—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥–æ–º –Ω–µ–ª—å–∑—è.
 
 –ò–∑ —ç—Ç–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–±–ª–µ–º–∞, -"–û—Ç–∫—É–¥–∞ Templater –¥–æ–ª–∂–µ–Ω –±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –í–∞–ª–∏–¥–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–∫–∞—á–µ–Ω–Ω–æ–µ
 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ AppStore –∏–º–µ–µ—Ç —á–∏—Å—Ç—É—é –ø–µ—Å–æ—á–Ω–∏—Ü—É ?".
 
 –û–¥–Ω–∏–º –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —à–∞–±–ª–æ–Ω–æ–≤ —Å –∏–º–µ–Ω–µ–º 'APIManagerResponseDefaultTemplates.zip'
 –≤ bundle –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∞ –∑–∞—Ç–µ–º –≤–æ –≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥ +unarchiveFolderWithDefaultTemplates:..,
 –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏–µ—Ç –ø–∞–ø–∫—É –≤ –Ω—É–∂–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ 'pathToTemplateDirectory').
 
 –í –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∞—Ç—å json —Ñ–∞–π–ª—ã —Å –¥–∏—Å–∫–∞, –∞ —Ç–∞–∫–∂–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏—Ö.
 --------------------------------------------------------------------------------------------------------------*/


@interface Templater ()

/*--------------------------------------------------------------------------------------------------------------
 –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ 'APIManagerResponseTemplates' –Ω–∞ –¥–∏—Å–∫–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.
 –ï—Å–ª–∏ –≤—ã –≤—ã–∑–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –ø–∞–ø–∫—É –Ω–∞ –¥–∏—Å–∫–µ.
 –ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø–∞–ø–∫—É –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ, –≤—ã–∑–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥ +setNewPathToTemplateDirectory:
 --------------------------------------------------------------------------------------------------------------*/
@property (atomic, strong, readwrite, class) NSString* pathToTemplateDirectory;

/*--------------------------------------------------------------------------------------------------------------
 –°–ª–æ–≤–∞—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ —Ä–∞–Ω–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ json —Ñ–∞–π–ª—ã –ø–æ –∫–ª—é—á–∞–º apiMethod.
 –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å –¥–∏—Å–∫–∞, —à–∞–±–ª–æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–æ–±–∞–≤–ª–µ—Ç—Å—è –≤ —Å–ª–æ–≤–∞—Ä—å.
 --------------------------------------------------------------------------------------------------------------*/
@property (atomic, strong, class) NSMutableDictionary<NSString*,NSDictionary*>* templates;

/*--------------------------------------------------------------------------------------------------------------
 –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ–ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–≤–µ—Ä—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø—Ä–æ–ø–µ—Ä—Ç–∏ 'pathToTemplateDirectory'
 –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–∞–ø–∫–∏ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –≤ –¥—Ä—É–≥—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
 –ú–µ—Ç–æ–¥—ã –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –Ω–∏–∂–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç —Å–≤–æ–π –∫–æ–¥ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫ –∫–æ—Ç–æ—Ä—ã–π –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω—É—é –æ—á–µ—Ä–µ–¥—å.
 
 +templateForAPIMethod:
 +writeTemplate:forAPIMethod:
 +removeTemplateForAPIMethod:
 +removeAllTemplates:
 --------------------------------------------------------------------------------------------------------------*/
@property (nonatomic, strong, class) dispatch_queue_t serialDispatchQueue;

@end


static NSMutableDictionary *_templates               = nil;
static NSString            *_pathToTemplateDirectory = nil;
static dispatch_queue_t     _serialDispatchQueue     = nil;
static BOOL                 _loadTemplateFromBundle  = NO;

@implementation Templater


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 .___________. _______ .___  ___. .______    __          ___   .___________. _______     _______.
 |           ||   ____||   \/   | |   _  \  |  |        /   \  |           ||   ____|   /       |
 `---|  |----`|  |__   |  \  /  | |  |_)  | |  |       /  ^  \ `---|  |----`|  |__     |   (----`
     |  |     |   __|  |  |\/|  | |   ___/  |  |      /  /_\  \    |  |     |   __|     \   \
     |  |     |  |____ |  |  |  | |  |      |  `----./  _____  \   |  |     |  |____.----)   |
     |__|     |_______||__|  |__| | _|      |_______/__/     \__\  |__|     |_______|_______/
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma mark - Templates

/*--------------------------------------------------------------------------------------------------------------
–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–Ω–µ–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–π json —Ñ–∞–π–ª —Å –¥–∏—Å–∫–∞ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∏–∑ RAM –ø–∞–º—è—Ç–∏.
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSDictionary*) templateForAPIMethod:(APIMethod)method
{
    __block NSDictionary* template = nil;
    
    dispatch_sync(self.serialDispatchQueue, ^{

        if (method == APIMethod_Unknow){
            return;
        }
        NSString* apiMethod = [APIManager convertAPIMethodToString:method];

        // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω —Ä–∞–Ω–µ–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è —Å –¥–∏—Å–∫–∞, —Ç–æ –ø—ã—Ç–∞–µ–º—Å—è –¥–æ—Å—Ç–∞—Ç—å –µ–≥–æ –∏–∑ RAM
           template = self.templates[apiMethod];
        if (template) return;
        
        NSData* data =  nil;
       
        if (self.loadTemplateFromBundle){
            // –ó–∞–≥—Ä—É–∑–∫–∞ —Å Bundle
            NSString *localPathBundle = [[NSBundle mainBundle] pathForResource:apiMethod ofType:@"json"];
            data = [NSData dataWithContentsOfFile:localPathBundle];
        } else {
           //  –ó–∞–≥—Ä—É–∑–∫–∞ —Å –¥–∏—Å–∫–∞
            NSString* localPath = [NSString stringWithFormat:@"%@/%@.json",self.pathToTemplateDirectory,apiMethod];
           data = [NSData dataWithContentsOfFile:localPath];
        }
        
        if (!data) return;
        
        NSError* error;
        template = [NSJSONSerialization JSONObjectWithData:data options:kNilOptions error:&error];
        if (error){
            NSLog(@"+templateForAPIMethod recovered invalid error from disk. By APIMethod(%@)| error: %@",apiMethod,error);
        }
        // –ó–∞–Ω–æ—Å–∏–º –≤ RAM –ø–∞–º—è—Ç—å
        if ((template) && (!error)){
            [self.templates setObject:template forKey:apiMethod];
        }
    });
    return template;
}


/*--------------------------------------------------------------------------------------------------------------
 –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–±—Ä–∞–∑–µ—Ü —Ñ–∞–π–ª–∞ —Å –∏–º–µ–Ω–µ–º API –º–µ—Ç–æ–¥–∞
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSError*) writeTemplate:(NSDictionary*)template forAPIMethod:(APIMethod)method
{
    __block NSError* error = nil;

    dispatch_sync(self.serialDispatchQueue, ^{

        if ((method == APIMethod_Unknow) || (template.allKeys.count < 1)){
            error = [NSError errorWithDomain:@"template or apiMethod in +writeTemplate:forAPIMethod: is incorrect" code:0 userInfo:nil];
            return;
        }
        
        NSData *jsonData = [NSJSONSerialization dataWithJSONObject:template
                                                           options:NSJSONWritingPrettyPrinted
                                                             error:&error];

        if (error) return;
    
        NSString* apiMethod = [APIManager convertAPIMethodToString:method];
        NSString* localPath = [NSString stringWithFormat:@"%@/%@.json",self.pathToTemplateDirectory,apiMethod];

        [jsonData writeToFile:localPath atomically:YES];
        
 
        // –ï—Å–ª–∏ –ø–æ –∫–ª—é—á—É 'apiMethod' –≤ —Å–ª–æ–≤–∞—Ä–µ 'templates' —É–∂–µ —Ö—Ä–∞–Ω–∏–ª—Å—è –æ–±—Ä–∞–∑–µ—Ü,
        // —Ç–æ –µ–≥–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
        if (self.templates[apiMethod]){
            self.templates[apiMethod] = template;
        }
    });
    return error;
}


/*--------------------------------------------------------------------------------------------------------------
 –£–¥–∞–ª—è–µ—Ç –æ–±—Ä–∞–∑–µ—Ü —Ñ–∞–π–ª–∞ —Å –¥–∏—Å–∫–∞ –∏ –∏–∑ RAM –ø–æ –∏–º–µ–Ω–∏ API –º–µ—Ç–æ–¥–∞
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSError*) removeTemplateForAPIMethod:(APIMethod)method
{
    __block NSError* error = nil;

    dispatch_sync(self.serialDispatchQueue, ^{
        
        if (method == APIMethod_Unknow){
            error = [NSError errorWithDomain:@"apiMethod in +removeTemplateForAPIMethod: is incorrect" code:0 userInfo:nil];
            return;
        }
        NSString* apiMethod = [APIManager convertAPIMethodToString:method];
        
        // –£–¥–∞–ª—è–µ–º —Å –¥–∏—Å–∫–∞
        NSString* localPath = [NSString stringWithFormat:@"%@/%@.json",self.pathToTemplateDirectory,apiMethod];
        [TemplaterFileManager removeItemAtPath:localPath error:&error];

        // –£–¥–∞–ª—è–µ–º –∏–∑ RAM
        [self.templates removeObjectForKey:apiMethod];
    });
    return error;
}


/*--------------------------------------------------------------------------------------------------------------
 –ü–æ–∑–≤–æ–ª—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É —Å–æ –≤—Å–µ–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSError*) removeAllTemplates
{
    __block NSError* error = nil;
    dispatch_sync(self.serialDispatchQueue, ^{
        [TemplaterFileManager removeItemAtPath:self.pathToTemplateDirectory error:&error];
    });
    return error;
}



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
      _______.     ___      .__   __.  _______  .______     ______   ___   ___
     /       |    /   \     |  \ |  | |       \ |   _  \   /  __  \  \  \ /  /
    |   (----`   /  ^  \    |   \|  | |  .--.  ||  |_)  | |  |  |  |  \  V  /
     \   \      /  /_\  \   |  . `  | |  |  |  ||   _  <  |  |  |  |   >   <
 .----)   |    /  _____  \  |  |\   | |  '--'  ||  |_)  | |  `--'  |  /  .  \
 |_______/    /__/     \__\ |__| \__| |_______/ |______/   \______/  /__/ \__\
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma mark - Sandbox

/*--------------------------------------------------------------------------------------------------------------
 –°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSError*) createFolderIfItDoesntExitByPath:(NSString*)pathToFolder
{
    if ([TemplaterFileManager isDirectoryItemAtPath:pathToFolder]){
        return nil;
    }
    
    NSError *error = nil;
    [TemplaterFileManager createDirectoriesForPath:pathToFolder error:&error];
    NSLog(@"createFolderIfItDoesntExitByPath error: %@",error);
    return error;
}

/*--------------------------------------------------------------------------------------------------------------
  –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –ø–∞–ø–∫—É 'APIManagerResponseTemplates' –ø–æ –Ω–æ–≤–æ–º—É –∞–¥—Ä–µ—Å—É
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSError*) replaceTemplateDirectoryAtPath:(NSString*)path
{
    NSError* error;
   [TemplaterFileManager moveItemAtPath:self.pathToTemplateDirectory toPath:path error:&error];
    NSLog(@"replaceTemplateDirectoryAtPath error: %@",error);
    return error;
}




#pragma mark - Getter Setter

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
   _______  _______ .___________.___________. _______ .______
  /  _____||   ____||           |           ||   ____||   _  \
 |  |  __  |  |__   `---|  |----`---|  |----`|  |__   |  |_)  |
 |  | |_ | |   __|      |  |        |  |     |   __|  |      /
 |  |__| | |  |____     |  |        |  |     |  |____ |  |\  \----.
  \______| |_______|    |__|        |__|     |_______|| _| `._____|
      _______. _______ .___________.___________. _______ .______
     /       ||   ____||           |           ||   ____||   _  \
    |   (----`|  |__   `---|  |----`---|  |----`|  |__   |  |_)  |
     \   \    |   __|      |  |        |  |     |   __|  |      /
 .----)   |   |  |____     |  |        |  |     |  |____ |  |\  \----.
 |_______/    |_______|    |__|        |__|     |_______|| _| `._____|
 
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#pragma mark - Support classes properties

/*--------------------------------------------------------------------------------------------------------------
 @property (nonatomic, assign, class) BOOL loadTemplateFromBundle;
 --------------------------------------------------------------------------------------------------------------*/
+ (BOOL)loadTemplateFromBundle{
    return _loadTemplateFromBundle;
}

+ (void)setLoadTemplateFromBundle:(BOOL)loadTemplateFromBundle
{
    _loadTemplateFromBundle = loadTemplateFromBundle;
}


/*--------------------------------------------------------------------------------------------------------------
 @property (nonatomic, strong, class) dispatch_queue_t serialDispatchQueue;
 --------------------------------------------------------------------------------------------------------------*/
+ (dispatch_queue_t)serialDispatchQueue
{
    if (!_serialDispatchQueue){
         _serialDispatchQueue = dispatch_queue_create("Templater.serial.aSyncQueue", NULL);
    }
    return _serialDispatchQueue;
}

+ (void)setSerialDispatchQueue:(dispatch_queue_t)serialDispatchQueue
{
    _serialDispatchQueue = serialDispatchQueue;
}

/*--------------------------------------------------------------------------------------------------------------
 @property (nonatomic, strong, class) NSMutableDictionary<NSString*,NSDictionary*>* templates;
 --------------------------------------------------------------------------------------------------------------*/
+ (NSMutableDictionary<NSString *,NSDictionary *> *)templates {
    
    if (!_templates){
         _templates = [NSMutableDictionary new];
    }
    return _templates;
}

+ (void)setTemplates:(NSMutableDictionary<NSString *,NSDictionary *> *)templates {
    _templates = templates;
}


/*--------------------------------------------------------------------------------------------------------------
  –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–∞–ø–∫–∏ —Å —à–∞–±–ª–æ–Ω–∞–º–∏.
  –ë–ª–æ–∫ 'dispatch_barrier_sync' –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–Ω–∞—á–∞–ª–∞ –¥–æ–∂–¥–∞—Ç—å—Å—è –≤—ã–ø–æ–ª–µ–Ω–∏–Ω–∏—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –∞ –ø–æ—Ç–æ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å
  –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è.
 --------------------------------------------------------------------------------------------------------------*/
+ (void) setNewPathToTemplateDirectory:(NSString*)path
{
    dispatch_barrier_sync(self.serialDispatchQueue, ^{
        [self setPathToTemplateDirectory:path];
    });
}

/*--------------------------------------------------------------------------------------------------------------
 @property (nonatomic, strong, class) NSString* pathToTemplateDirectory;
 --------------------------------------------------------------------------------------------------------------*/

+ (NSString *)pathToTemplateDirectory
{
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ UserDefault
    if ((!_pathToTemplateDirectory) && ([Templater shortPathFromUserDefault].length > 0)) {
          _pathToTemplateDirectory = [Templater fullPathFromUserDefault];
    }
    
    // –ï—Å–ª–∏ –≤ UserDefault –Ω–∏—á–µ–≥–æ –Ω–µ –±—ã–ª–æ, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
    if (!_pathToTemplateDirectory){
        
        NSString* pathToLibraryCaches = [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask,YES) firstObject];
        NSString* pathToFolder = [pathToLibraryCaches stringByAppendingPathComponent:@"/APIManagerResponseTemplates"];

        [Templater saveAnyPathToUserDefault:pathToFolder];
        _pathToTemplateDirectory = pathToFolder;
    }
    
    if ((_pathToTemplateDirectory) && (![TemplaterFileManager existsItemAtPath:_pathToTemplateDirectory])){
        [self createFolderIfItDoesntExitByPath:_pathToTemplateDirectory];
    }
    
    return _pathToTemplateDirectory;
}


/*--------------------------------------------------------------------------------------------------------------
 –°—é–¥–∞ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ü–µ–ª—ã–π –ø—É—Ç—å –î–û –ø–∞–ø–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
 '/Users/Containers/Data/Application/.../Library/' –∏–º—è 'APIManagerResponseTemplates' –±—É–¥–µ—Ç –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
 --------------------------------------------------------------------------------------------------------------*/
+ (void)setPathToTemplateDirectory:(NSString*)pathToTemplateDirectory
{
    if (pathToTemplateDirectory.length < 1){
        _pathToTemplateDirectory = nil;
        return;
    }

    NSString* fullPath        = [Templater buildFullPathFrom:pathToTemplateDirectory];
    NSString* shortPathFromUD = [Templater shortPathFromUserDefault];
    
    // –ï—Å–ª–∏ –ø—Ä–æ–ø–µ—Ä—Ç–∏ —É–∂–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
    if ((_pathToTemplateDirectory.length > 0) && (fullPath.length > 0))
    {
        // –¢–æ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ-–±—ã –∑–Ω–∞—á–µ–Ω–∏—è –±—ã–ª–∏ –Ω–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ
        if ([_pathToTemplateDirectory isEqualToString:fullPath]){
            // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ç–æ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
            return;
        } else {
            // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–∑–Ω—ã–µ. –¢–æ:
            // 1. –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –ø–∞–ø–∫—É –∏–∑ —Å—Ç–∞—Ä–æ–π –ª–æ–∫–∞—Ü–∏–∏ –≤ –Ω–æ–≤—É—é
            // 2. –ó–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤—ã–π –ø—É—Ç—å –≤ UserDefault
            NSError* error = [Templater replaceTemplateDirectoryAtPath:fullPath];
            //[TemplaterFileManager moveItemAtPath:_pathToTemplateDirectory toPath:fullPath error:&error];
            if (error) NSLog(@"error: %@",error);
            else {
                // –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ UserDefault
                [Templater saveAnyPathToUserDefault:fullPath];
            }
            _pathToTemplateDirectory = fullPath;
        }
        return;
    }

    // –ï—Å–ª–∏ –≤ UserDefault —á—Ç–æ-—Ç–æ –±—ã–ª–æ. –ò –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–¥–µ—Ç–∏—á–Ω–æ, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤—ã—Ö–æ–¥–∏–º
    if ([[Templater cutShortPathFrom:fullPath] isEqualToString:[Templater shortPathFromUserDefault]])
    {
        _pathToTemplateDirectory = fullPath;
        return;
    }

    
    // –ï—Å–ª–∏ –≤ UserDefault –ø—É—Å—Ç–æ
    if (shortPathFromUD.length < 1){
        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É
        [self createFolderIfItDoesntExitByPath:fullPath];

    // –ï—Å–ª–∏ –≤ UserDefault —á—Ç–æ-—Ç–æ –±—ã–ª–æ, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –Ω–æ–≤—É—é –ª–æ–∫–∞—Ü–∏—é
    } else if ((shortPathFromUD.length > 1) && (![shortPathFromUD isEqualToString:[Templater cutShortPathFrom:fullPath]])) {
       
        NSError* error = [Templater replaceTemplateDirectoryAtPath:fullPath];
        if (error) NSLog(@"error: %@",error);
        
    }
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    [Templater saveAnyPathToUserDefault:fullPath];
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ–ø–µ—Ä—Ç–∏
    _pathToTemplateDirectory = fullPath;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
      _______.___________..______       __  .__   __.   _______      _______.
     /       |           ||   _  \     |  | |  \ |  |  /  _____|    /       |
    |   (----`---|  |----`|  |_)  |    |  | |   \|  | |  |  __     |   (----`
     \   \       |  |     |      /     |  | |  . `  | |  | |_ |     \   \
 .----)   |      |  |     |  |\  \----.|  | |  |\   | |  |__| | .----)   |
 |_______/       |__|     | _| `._____||__| |__| \__|  \______| |_______/
 
  __        ______     _______  __    ______
 |  |      /  __  \   /  _____||  |  /      |
 |  |     |  |  |  | |  |  __  |  | |  ,----'
 |  |     |  |  |  | |  | |_ | |  | |  |
 |  `----.|  `--'  | |  |__| | |  | |  `----.
 |_______| \______/   \______| |__|  \______|
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma mark - Strings / Logics / UserDefault

/*--------------------------------------------------------------------------------------------------------------
 –ú–µ—Ç–æ–¥ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∞—Ä—Ö–∏–≤ —Å –ø–∞–ø–∫–æ–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö json —Ñ–∞–π–ª–æ–≤ (–æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞).
 –ï—Å–ª–∏ —É–∫–∞–∂–∏—Ç–µ nil –≤ –∞—Ä–≥—É–º–µ–Ω—Ç 'atPath', —Ç–æ–≥–¥–∞ –∞–ª–≥–æ—Ä–∏—Ç–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–∞—Ä—Ö–∏–≤—Ä—É–µ—Ç –ø–∞–ø–∫—É –ø–æ –ø—É—Ç–∏ 'Templater.pathToTemplateDirectory'.
 –î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ +APIManager.prepareBeforeUsing:,
 –≤–Ω—É—Ç—Ä–∏ –≤—Å—Ç—Ä–æ–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–∑–∞—Ä—Ö–∏–≤—Ä–æ–≤–∞–Ω–∏–π.
 --------------------------------------------------------------------------------------------------------------*/

+ (void) unarchiveFolderWithDefaultTemplates:(nullable NSString*)atPath
                                  completion:(nullable void(^)(NSError* error))completion
{
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ —Ä–∞–Ω–µ–µ –∞—Ä—Ö–∏–≤ —Ä–∞–∑—Ä–∞—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω
    BOOL wasZipExtractedEarly = [[NSUserDefaults standardUserDefaults] boolForKey:wasArchiveExtractedUserDefaultKey];
    if (wasZipExtractedEarly){
        return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å –∫—É–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏—è
    if (atPath.length < 1){
        atPath = Templater.pathToTemplateDirectory;
    } else {
        [Templater setNewPathToTemplateDirectory:atPath];
    }
    
    // –£–¥–∞–ª—è–µ–º –Ω–∞ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏
    atPath = [Templater removeDefaultFolderNameToPathIfItNeeded:atPath];
    
    // –ò—â–µ–º –ø—É—Ç—å –∫ –∞—Ä—Ö–∏–≤—É –≤ bundle –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    NSString *localPathAtZip = [[NSBundle mainBundle] pathForResource:@"APIManagerResponseDefaultTemplates" ofType:@"zip"];
    if (localPathAtZip.length < 1){
        if (completion)
            completion([NSError errorWithDomain:@"APIManagerResponseDefaultTemplates.zip wasn't find in bundle" code:0 userInfo:nil]);
        return;
    }
    
    // –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤
    [SSZipArchive unzipFileAtPath:localPathAtZip
                    toDestination:atPath
                  progressHandler:^(NSString * _Nonnull entry, unz_file_info zipInfo, long entryNumber, long total) {
                      
                  } completionHandler:^(NSString * _Nonnull path, BOOL succeeded, NSError * _Nullable errorUnpackZip) {
                      
                      if (errorUnpackZip){
                          if (completion) { completion(errorUnpackZip); };
                      }else if (succeeded){
                          if (completion) completion(nil);
                          
                          // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –≥–æ–≤–æ—Ä—è—â–∏–π –æ —Ç–æ–º, —á—Ç–æ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏—è –±—ã–ª–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞
                          [[NSUserDefaults standardUserDefaults] setBool:YES forKey:wasArchiveExtractedUserDefaultKey];
                          [[NSUserDefaults standardUserDefaults] synchronize];
                      }
    }];
}



/*--------------------------------------------------------------------------------------------------------------
–û–±—Ä–µ–∑–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–π –ø—É—Ç—å, –≤–æ–∑–≤—Ä–∞—â–∞—è —Ç–æ–ª—å–∫–æ 'Documents/API Manager Response Templates'
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSString*) cutShortPathFrom:(NSString*)fullPath
{
    if (fullPath.length < 1) return nil;
    
    fullPath = [Templater appendDefaultFolderNameToPathIfItNeeded:fullPath];
    
    NSRange  range = [fullPath rangeOfString:NSHomeDirectory()];
    if (range.location == NSNotFound) return fullPath;
    NSString* pathToTemplateDirFromHomeDir = [fullPath substringFromIndex:range.length+1];
    
    return pathToTemplateDirFromHomeDir;
}


/*--------------------------------------------------------------------------------------------------------------
 –°–æ–µ–¥–∏–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫—É NSHomeDirectory() c 'Documents/APIManagerResponseTemplates' (–µ—Å–ª–∏ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è), –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSString*) buildFullPathFrom:(NSString*)shortPath
{
    if (shortPath.length < 1) return nil;

    shortPath = [Templater appendDefaultFolderNameToPathIfItNeeded:shortPath];
    
    NSRange  range = [shortPath rangeOfString:NSHomeDirectory()];
    if (range.location != NSNotFound) return shortPath;
    
    
    NSString* fullPath = [NSHomeDirectory() stringByAppendingPathComponent:shortPath];
    return fullPath;
}

/*--------------------------------------------------------------------------------------------------------------
  –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ 'APIManagerResponseTemplates' –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –ø—É—Ç—å (–µ—Å–ª–∏ –æ–Ω–æ —Ç–∞–º –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç)
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSString*) appendDefaultFolderNameToPathIfItNeeded:(NSString*)path
{
    if (path.length < 1) return nil;

    NSRange templateFolder_range = [path rangeOfString:@"/APIManagerResponseTemplates"];
    if (templateFolder_range.location == NSNotFound){
        path = [path stringByAppendingPathComponent:@"/APIManagerResponseTemplates"];
    }
    return path;
}

/*--------------------------------------------------------------------------------------------------------------
 –£–¥–∞–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ 'APIManagerResponseTemplates' –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –ø—É—Ç—å (–µ—Å–ª–∏ –æ–Ω–æ —Ç–∞–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç)
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSString*) removeDefaultFolderNameToPathIfItNeeded:(NSString*)path
{
    if (path.length < 1) return nil;
    
    NSRange templateFolder_range = [path rangeOfString:@"/APIManagerResponseTemplates"];
    if (templateFolder_range.location != NSNotFound){
        path = [path substringToIndex:templateFolder_range.location];
        //path = [path stringByAppendingPathComponent:@"/APIManagerResponseTemplates"];
    }
    return path;
}



/*--------------------------------------------------------------------------------------------------------------
 –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—É—Ç—å –≤ UserDefault. –ú–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å –ª—é–±—É—é –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é shortPath/fullPath
 --------------------------------------------------------------------------------------------------------------*/
+ (BOOL) saveAnyPathToUserDefault:(NSString*)path
{
    if (path.length < 1) return NO;

    path = [Templater appendDefaultFolderNameToPathIfItNeeded:path];
    path = [Templater cutShortPathFrom:path];
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    [[NSUserDefaults standardUserDefaults] setObject:path forKey:templateDirectoryUserDefaultKey];
    [[NSUserDefaults standardUserDefaults] synchronize];
    
    return YES;
}

/*--------------------------------------------------------------------------------------------------------------
 –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ UserDefault –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫—É—é —Å—Ç—Ä–æ–∫—É 'Documents/APIManagerResponseTemplates'.
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSString*) shortPathFromUserDefault
{
    return  [[NSUserDefaults standardUserDefaults] stringForKey:templateDirectoryUserDefaultKey];
}


/*--------------------------------------------------------------------------------------------------------------
 –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ UserDefault –∫–æ—Ä–æ—Ç–∫—É—é —Å—Ç—Ä–æ–∫—É 'Documents/APIManagerResponseTemplates'.
 –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç 'NSHomeDirectory()'+'Documents/APIManagerResponseTemplates' –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSString*) fullPathFromUserDefault
{
    NSString* path = [Templater shortPathFromUserDefault];
    NSString* full = [Templater buildFullPathFrom:path];
    return full;
}


@end
