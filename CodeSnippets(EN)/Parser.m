//
//  Parser.m
//  vk-networkLayer
//
//  Created by Admin on 03/08/2020.
//  Copyright ¬© 2020 iOS-Team. All rights reserved.
//

#import "Parser.h"
// Helpers Categories
#import "NSError+ShortStyle.h"


/*--------------------------------------------------------------------------------------------------------------
 üóÇ üîç 'Parser' - –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–ª–æ–∂–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
 ---------------
 –ü—Ä–∏–º–µ–Ω–∏–º –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ —Ç—Ä–µ–±—É—é—Ç—Å—è –¥–æ—Å—Ç–∞—Ç—å –≥–ª—É–±–æ–∫–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
 ---------------
 [‚öñÔ∏è] Duties:
 - –°–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–¥ –º–µ—Ç–æ–¥–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–≤–ª–µ–∫–∞—é—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–º –∫–æ–¥–æ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏.
 ---------------
 [üìá] Code style:
 1) –ò–º—è –º–µ—Ç–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏–∑–≤–ª–µ–∫–∞—Ç—å. (–ù–∞–ø—Ä. 'lastSeenPlatform')
 2) –ü–æ—Å–ª–µ –∏–º–µ–Ω–∏ –º–µ—Ç–æ–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–¥–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ API –º–µ—Ç–æ–¥–∞ (–Ω–∞–ø—Ä 'UserGet') –∏ —Å—É—Ñ–∏–∫—Å 'Method'.
 3) –ò–º—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–¥–µ–Ω—Ç–∏—á–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏—é.
    –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –º–µ—Ç–æ–¥ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏—Å–∫–∞–ª –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞, —Ç–æ –∏–º—è
    –∞—Ä–≥—É–º–µ–Ω—Ç—É –≤—ã –¥–æ–ª–∂–Ω—ã –¥–∞—Ç—å 'json'.
 4) –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –≤—ã–Ω—É–∂–¥–∞—é—Ç —Å–æ–∑–¥–∞—Ç—å –¥–≤–∞ –ø–æ—Ö–æ–∂–∏—Ö –º–µ—Ç–æ–¥–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π, —Ç–æ –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ
 –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ –Ω–∞ –∫–æ–Ω–µ—Ü –º–µ—Ç–æ–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å—É—Ñ—Ñ–∏–∫—Å 'From' –∏ –∏–º—è –≤–ª–æ–∂–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–∑ –∫–æ—Ç–æ—Ä–æ–π
 –±—É–¥–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã –¥–∞–Ω–Ω—ã–µ.
 –ü—Ä–∏–º–µ—Ä: 'followers'+'InUserGet'+'Method'+'From'+'Counters'.
 --------------------------------------------------------------------------------------------------------------*/


@implementation Parser

#pragma mark - Parsing elements from API method 'user.get'
/*--------------------------------------------------------------------------------------------------------------
 –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –∫–æ—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≤–µ—Ä—à–∏–ª —Å–≤–æ–π –∫—Ä–∞–π–Ω–∏–π —Å–µ–∞–Ω—Å.
 –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ 'UserGet'.
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSNumber*) lastSeenPlatformInUserGetMethod:(NSDictionary*)json error:(NSError*_Nullable* _Nullable)error
{
    if (json.allKeys.count < 1) { *error = [NSError initWithMsg:@"+lastSeenPlatformInUserGetMethod: received empty json"]; return nil;}
    
    NSArray<NSDictionary*>* response = json[@"response"];
    if (!response) { *error = [NSError initWithMsg:@"+lastSeenPlatformInUserGetMethod: 'response' has not found"]; return nil;}
    
    
    NSDictionary* firstNastedObject = [response firstObject];
    if (!firstNastedObject) { *error = [NSError initWithMsg:@"+lastSeenPlatformInUserGetMethod: '[response firstObject]' has not found"]; return nil;}

    
    NSDictionary* lastSeenObject = firstNastedObject[@"last_seen"];
    if (!lastSeenObject) { *error = [NSError initWithMsg:@"+lastSeenPlatformInUserGetMethod: 'firstNastedObject[@\"last_seen\"]' has not found"]; return nil;}

    
    NSNumber* platform = lastSeenObject[@"platform"];
    if (!platform) { *error = [NSError initWithMsg:@"+lastSeenPlatformInUserGetMethod: 'lastSeenObject[@\"platform\"]' has not found"]; return nil;}

    
    return platform;
}

/*--------------------------------------------------------------------------------------------------------------
 –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏–∑ —Å–ª–æ–≤–∞—Ä—è 'counters' –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø–æ–ª—É—á–µ–Ω –≤ –æ—Ç–≤–µ—Ç –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ 'UserGet'.
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSNumber*) followersInUserGetMethodFromCounter:(NSDictionary*)counters error:(NSError*_Nullable* _Nullable)error
{
    if (counters.allKeys.count < 1) { *error = [NSError initWithMsg:@"+followersInUserGetMethodFromCounter: received empty json"]; return nil;}

    NSNumber* followers = counters[@"counters"];
    if (!followers) { *error = [NSError initWithMsg:@"+followersInUserGetMethodFromCounter: 'counters[@\"counters\"]' has not found"]; return nil;}

    return followers;
}

#pragma mark - Parsing elements from API method 'wall.post'
/*--------------------------------------------------------------------------------------------------------------
 –ò–∑–≤–ª–µ–∫–∞–µ—Ç 'post_id' –∏ json –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –ø–æ –º–µ—Ç–æ–¥—É 'wall.post'
 --------------------------------------------------------------------------------------------------------------*/
+ (nullable NSNumber*) postIDInWallPostMethod:(NSDictionary*)json error:(NSError*_Nullable* _Nullable)error
{
    if (json.allKeys.count < 1) { *error = [NSError initWithMsg:@"+postIDInWallPostMethod: received empty json"]; return nil;}

    NSNumber* postID = nil;
    if (json[@"response"]){
        NSDictionary* response = json[@"response"];
        postID = response[@"post_id"];
    }else {
        *error = [NSError initWithMsg:@"+postIDInWallPostMethod: 'json[@\"response\"]' has not found"];
    }
    return postID;
}


@end
